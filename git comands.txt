git config --global user.name arhizmei

git config --global user.email arhizmei@gmail.com

git config --list получение списка всех настроек гита

ctrl+L очистка экрана

git config --global --unset-all user.name или user.email удаляет информацию этих настроек

----------------------------------------------------------------------------------------------------------
cd                          - переход в папку, если нажать tab набрав начальные символы то названия файлов сами добавляются, нажав два раза tab появится все файлы

cd ..                       - подняться выше в корень 

cd -                        - вернуться назад

ls                          - список файлов в папке

mkdir название папки        - создание новой папки

echo "Some text" > file.txt - создание файла с текстом

cat file.txt                - чтение файла

rm file.txt                 - удаление файла

rmdir                       - удаление пустой папки и пустого каталога

pwd                         - полный путь к папке

ls -la                      - просмотр скрытых файлов и папок

--------------------------------------------------------------------------------------------------------

git init                    - создание нового гит репозитория, при этом создается скрытая папка .git

git branch                  - название ветки гита

git branch -m main          - переименовать ветку или создать новую, если писать без -м

git branch -m master development - переименовать локальную ветку "master" в "development

git push -u origin development:main - Теперь сообщите удаленному репозиторию о переименовании

git branch -d <branch name> - удаление ветки

git checkout -b another-feature - создание новой ветки и перемещение в нее

git merge <feature branch name> - слияние веток, при этом нужно находится в главной ветке
 
git list                    - проверка проидексированых файлов и измененных

git add                     - добавить файлы в индекс

git add .                   - добавить все измененные файлы в индекс

git commit                  - переносить все проиндексированные файлы в репозиторий

git commit -m "massage"     - добавляет коммит с названием(коментарием) на заходя в текстовый редактор	

git reset --hard HEAD~      - удаляем коммит и изменения

git commit --amend -m "Новое название коммита" - переименовать последний коммит

https://losst.pro/kak-polzovatsya-tekstovym-redaktorom-vim

https://habr.com/ru/post/663758/ - Горячие клавиши в терминале Linux

https://habr.com/ru/company/ruvds/blog/599929/ - 30 команд Git
------------------------------------------------------------------------------------------------------

git status                  - текущее состояния репозитория

git log                     - просмотр истории коммитов

git checkout <commit hach>  - переход в определенную версию проекта по SHA1 хэшу коммита

git checkout <branch name>  - переход в определенную версию проекта по названию ветки

git cat-file -p <commit hach> - информация о комите, вместо скобок вставляется часть названия хеша коммита, есть еще опция -t тогда будет просто тип файла, код нужно писать находясь в дереве гита, в папке комита

git checkout 1b99           - изменить версию проекта, передвинуть метку head, где 1b99 часть названия хеша ветки

git checkout main           - возвращает метку на последний коммит

-------------------------------------------------------------------------------------------------------

git clone <url>             - копировать удаленный репозиторий, автоматом связывает ветки локальные и удаленные

git branch -a               - список веток удаленного репозитория

git pull                    - загрузка и применения изменений с удаленной ветки в локальную

git clone https://github.com/Arhizmei/RecyclerView - загрузка проекта с гит хаба в пустую папку

git push                    - загрузка изменений из локальной ветки в ветку удаленного репозитория

git push origin serverfix   - загрузка новой ветки на удаленный репозиторий с названием origin и названием ветки serverfix

git remote add origin <url> - подключение удаленного репозитория

git push -u origin <branch> - загрузка изменений из локальной ветки в удаленную с созданием связи между ними

git remote -v		    - посмотреть связь с удаленным сервером

git push --set-upstream https://github.com/Arhizmei/Constant master  - загрузка файлов из нового локального проекта в пустой на гитхаб

git push --set-upstream orogin master - загрузка файлов из нового локального проекта в пустой на гитхаб


------------------------------------------------------------------------------------------------------

чтобы залить локальный проект на гитхаб необходимо сначала создать пустой репозиторий на гитхабе, а потом уже использовать команду git remote add origin <url> и потом залить проект через команду git push -u origin <branch>
--------------------------------------------------------------------------------------------------------

команды для пользования редактором VIM

В Vim вы можете написать текст и сохранить его, следуя следующим шагам:

Откройте Vim, запустив команду vim в терминале.

Войдите в режим вставки, нажав клавишу i на клавиатуре. Теперь вы можете вводить текст.

Напишите желаемый текст.

Когда вы закончите вводить текст, нажмите клавишу Esc, чтобы выйти из режима вставки.

Теперь вы можете сохранить текст, выполнив команду сохранения. Введите следующую команду в командной строке Vim:


:w имя_файла

Здесь имя_файла - это путь и имя файла, в котором вы хотите сохранить текст. Например, если вы хотите сохранить текст в файле example.txt, команда будет выглядеть так:

:w example.txt
Если файл не существует, Vim создаст новый файл с указанным именем. Если файл уже существует, Vim перезапишет его содержимое.

Нажмите клавишу Enter, чтобы выполнить команду сохранения.

Ваш текст будет сохранен в указанном файле.

Обратите внимание, что в Vim для выполнения команд вы должны быть в режиме командной строки (видно внизу редактора). Если вы случайно ввели команду в текстовом режиме, просто нажмите клавишу Esc, чтобы перейти в режим командной строки.

Чтобы сохранить текст и выйти из редактора Vim, вы можете использовать команду :wq (записать и выйти).

После того как вы закончили вводить текст и находитесь в режиме командной строки в Vim, введите следующую команду:

:wq
Эта команда сохранит текущий файл и выйдет из Vim.

Нажмите клавишу Enter, чтобы выполнить команду :wq.

Если файл ещё не сохранён, Vim предложит ввести имя файла перед выполнением команды :wq.

Vim сохранит текст в файле и закроет редактор, возвращая вас в терминал или редактор, из которого вы вызвали Vim.

При использовании команды :wq обязательно убедитесь, что вы закончили вводить текст и хотите сохранить его. Если вы хотите выйти из Vim без сохранения изменений, можно вместо :wq использовать команду :q! (выйти без сохранения).
